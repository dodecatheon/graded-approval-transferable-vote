Graded Approval Transferable Vote (GATV), a PR extension of ER-Bucklin(whole)
single-winner.

Copyright (C) 2011,  Louis G. "Ted" Stern

This code is an independently reimplemented simplification of Jameson
Quinn's PR-MCA, AKA Approval Threshold Transferable Vote (AT-TV), to
which he retains copyright.

http://www.mail-archive.com/election-methods@lists.electorama.com/msg07066.html

Copyright (C) 2011, Jameson Quinn

The main difference is that my version is straight ER-Bucklin, while
JQ selects a different candidate from among those whose Bucklin score
exceeds the quota.

Other minor differences:

(a) I calculate the rescale factor based on locksums (see below); and
(b) My method has options to use four different quotas:  Hare; Droop; a
    fractional version of Droop that is slightly smaller than traditional
    Droop in some cases, but still preserves the Droop qualities; and
    Hagenbach-Bischoff, the quota used by Quinn.

----------------
Name of Method:

Because Bucklin is usually interpreted as a ranked scheme, and I use a ratings
ballot, with gaps in rating allowed and an approval threshold based on
descending rating one unit at a time, I chose a different name to avoid
confusion.

I prefer a range of scores from 0 to 5, as in Majority Judgment, which could
be interpreted as named grades from Excellent to Reject; letter grades A+, A,
B, C, D, F; or percentage of alignment with the voter, 100%, 90%, 80%, 70%,
60%, 0.  The approval threshold is dropped one grade at a time, hence Graded
Approval.
----------------

Majority Choice Approval, a generalization of ER-Bucklin, is described here:

http://wiki.electorama.com/wiki/Majority_Choice_Approval

and here:

http://lists.electorama.com/pipermail/election-methods-electorama.com/2002-May/008248.html

By GATV, we mean here that one uses Range (AKA Score) ballots, and any rating
between 0 and the maximum range can be given to any candidate ("equal rank
allowed").  By default, the maximum rating is 5 (as in a Majority Judgement
ballot).  The equivalent of Bucklin first place is the maximum score.  The
"(M)" means that we seat the highest Bucklin-scoring candidate whose score
exceeds the quota (Majority criterion).

GATV is similar to STV, with equal ranking allowed, but there are
some key differences:

  In STV,

  * There must be exactly one candidate at each rank.

  * There can be no gaps in ranks, though lower ranks do not have to be
    filled in.

  * The only way for lower ranked candidates to be counted is for
    candidates in higher ranks to be eliminated or seated, at which
    time lower ranks are moved up one rank.

  * When no candidate's score exceeds the quota, the only way to
    increase the vote strength of other candidates is to eliminate the
    candidate with lowest top-rank score and move other candidates on
    that ballot up one rank.

  In GATV,

  * Equal ranking is allowed.

  * It is not necessary to fill in a candidate for each rating level.

  * When no candidate's score exceeds the quota, it is not necessary
    to eliminate lower-ranked candidates.  To increase the number of
    top-ranked candidates, the approval threshold is successively
    lowered for all candidates until at least one candidate exceeds
    the quota.

  * It is not necessary to automatically uprank scores on individual
    ballots, after either seating or elimination, because top-rank
    counts are done approval style.  Therefore we simply count a
    ballot for a candidate if that candidate's score exceeds the
    threshold.

  * The basic philosophy of the approval threshold is that you wait until
    every candidate has had a chance for their top-ranked candidates to make
    the quota and win a seat.  When everyone has had a chance but no one
    reaches quota, you then lower the approval threshold for every candidate
    at the same time.

    This decreases strategic voting incentives when compared to STV.

Background:

A similar Bucklin Transferable Vote idea described by Abd ul-Rahman
Lomax in this post, but he followed the STV approach of upranking when
a candidate was seated and reverted to Asset voting for the last seat
if no candidate makes the quota.

http://lists.electorama.com/pipermail/election-methods-electorama.com/2010-March/025738.html

Since this goes against the ER-Bucklin philosophy of giving everyone
the same approval threshold change at the same time, this scheme is no
longer "Bucklin".

Both GATV and STV transfer would make the same over-quota transfer
[(candidate_total - quota)/candidate_total], but I include an extra
correction to take account of locked ballots:

    over-vote rescale factor = (T - Q) / (T - L),
                               constrained to be between 0.0 and 1.0

Glossary, following the analogy of musical chairs:

Seated:      A candidate has met the quota and won a seat.

Standing:    Candidate has not met quota and is still in the running.

Locked:      A candidate's vote becomes locked on a single ballot when the
             ballot has only one standing candidate left.

             If that single candidate is seated, there are no other
             candidates to transfer the overquota vote to.

             If a candidate's score is locked on a ballot on the first
             round, the ballot is called a bullet vote -- the voter
             picked a single candidate.

             But it can also happen when all other choices on the
             ballot have already been seated.  Then if candidate A
             receives an overvote and the ballot is removed entirely,
             the ballot's excess score for A is not transferable.

Locksums:    The sum of locked scores for a candidate determine how much
             of the candidate's total score can be rescaled and
             redistributed in the event of being seated with an
             overquota.  If the total approved score for the candidate
             is B, the quota is Q, and the candidate's locksum is L,
             the over-vote rescaling is (B-Q)/(B-L), for Q > L.  If L
             > Q, no rescaling transfer is possible and L-Q of the
             vote is lost.

Rescaled
weight:      As ballots "get their way" by seating a candidate with a
             total approval score over the quota, we multiply the weight
             of that ballot by a factor to transfer the over-quota portion
             of the vote to other candidates on that ballot.

Approval
Threshold
and
Bucklin
Score:       We accumulate the total rescaled weight of ballots that vote
             for each candidate at each non-zero score level.

             The Total Approval score is the total weight of votes for a
             candidate at or above a specific rating.

             The Approval threshold is the rating at which one or more
             candidates has a Total Approval Score that exceeds the quota,
             and once one candidate has exceeded the quota, the Total Approval
             scores of all candidates are called their Bucklin Scores.

Algorithm:

There are N valid ballots and M seats to fill.

Begin with threshold at max score and rescale factor at 1.0 for each
ballot.  Set the quota:  The M-seat Droop quota is

    (floor[(N*M)/(M+1)] + 1) / M

Repeat until M candidates have been seated or threshold cannot be
lowered any further:

  Compute Bucklin Score:
    For each candidate,
       Repeat while threshold > 0
          Accumulate weighted total of ballots with score above threshold
          If any total is above the quota, break loop,
          Otherwise lower threshold by 1

  Seat candidate with highest Bucklin score (B)

  Rescale unlocked ballots containing that candidate to transfer
  over-quota vote, by multiplying the ballot strength by

      Factor = min(max(B-Q,0)/max(B-L,eps),1)

In the event that the threshold drops to zero and there is no candidate with
Bucklin score B over the quota, we simply seat the candidate with highest
approval (Bucklin score with all non-zero ranks counted) and remove all
ballots containing that candidate.

The Factor formula above handles the contingency that the Bucklin threshold
has gone to zero with no one over quota.  In that case, the rescale Factor is
zero.

Resolving Ties:

What should we do if there is more than one candidate with the highest Bucklin
score?

To determine the Bucklin score, we have already totaled up the number of votes
for each candidate (rescaled) at each non-zero score level.

We can take those totals and find the total range score sum instead of
summing the total number of votes over the threshold.

Of the tied winning candidates, we choose the one with highest overall approval
as measured by that score sum.

Usage:

There are some example csv ballots available in my Cumulative Tranferable Vote
project.  I'm duplicating them here.

Here's how to run them:

June 2011 example from
http://rangevoting.org/June2011RealWorldRRVvotes.txt

  ./gatv.py -n 9 -m 9 -q droop -i june2011.csv -o june2011_output.csv


Stephen Unger's STV example, from
http://rangevoting.org/STVPRunger.html

  ./gatv.py -n 3 -m 4 -q droop -i unger.csv -o unger_output.csv


A sample ballot from the CTV project:

  ./gatv.py -n 5 -m 10 -q droop -i new_sample.csv -o new_sample_output.csv

The csv output file contains a table with the intermediate Bucklin scores as
the score level is lowered to the threshold.  Each score is listed as

   #.#### (position)

where the number in parentheses is the rank of the Bucklin score.  If the
score with rank (1) exceeds the quota, that candidate is seated.

Excluding candidates:

You can test an election with one or more candidates excluded using the Unix
tool 'cut'.  Here's the first example, excluding candidate '108':

  cut -f1-7,8- -d, june2011.csv | \
  ./gatv.py -n 9 -m 9 -q droop -i - -o june2011_excluding_108_output.csv


Running the code:

If you don't have a python interpreter, you can run the code via the web,
using

   http://ideone.com

Select Python from the left sidebar.

Cut and paste everything in the gatv.py file, from from the "BEGIN cut and
paste line" (around line 27) to "END cut and paste line" (around line 404),
and insert it into the web page's source code textarea.

In the very same textarea, following the source you've just cut and pasted
above, enter the appropriate input to run your example.  To run the
june2011.csv input, for example, you enter the following two statements:


election = Election(nseats=9,
                    max_score=9,
                    csv_input='-',
                    csv_output='-',
                    qtype='droop')

election.run_election()


Click where it says "click here to enter input (stdin) ...", and paste in your
comma-separated variable input.  For this example, use text from the
june2011.csv file.

Then click on the Submit button on the lower left.
